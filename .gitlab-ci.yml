#This is a GitLab CI/CD Pipeline for 'Employee Management' Java application deployment on Amazon EC2.

stages:
  - build
  - deploy

build employee management app:
  stage: build
  image: openjdk:17-alpine3.14
  script:
    - echo "Make gradlew file executable."
    - chmod +x gradlew
    - echo "Clean the build project"
    - ./gradlew clean
    - echo "Building and packaging Gradle project into .jar"
    - ./gradlew bootJar
    - pwd
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 15 minutes

deploy employee management app ec2:
  stage: deploy
  image: alpine:3.17.0
  only:
    refs:
      - master
  before_script:
    - echo "Move .jar file to the root directory."
    - cd build/libs
    - mv *.jar ~/
    - cd ~/
    - pwd
    - apk -i update
    - apk add openssh-client
    - echo "Creating .pem file"
    - touch Employee-Management-App-VM.pem
    - pwd
    - mv Employee-Management-App-VM.pem ~/Employee-Management-App-VM.pem
    - echo "Writing the variable into .pem file"
    - echo "$SSH_INSTANCE_PEM" > Employee-Management-App-VM.pem
    - grep "RSA PRIVATE" Employee-Management-App-VM.pem
  script:
    - chmod 400 Employee-Management-App-VM.pem
    - echo "Checking for and removing already existing .jar files."
    - ssh -o StrictHostKeyChecking=no -i Employee-Management-App-VM.pem ubuntu@$VM1IP
    - if test \(*.jar\) ; then
          echo "Deleteing the files"
          rm *.jar
      else
          echo "No .jar files"
      fi
    - ssh -o StrictHostKeyChecking=no -i Employee-Management-App-VM.pem ubuntu@$VM2IP
    - if test \(*.jar\) ; then
          echo "Deleteing the files"
          rm *.jar
      else
          echo "No .jar files"
      fi
    - echo "Starting to copy JAR file into my EC2 Instances."
    - scp -o StrictHostKeyChecking=no -i Employee-Management-App-VM.pem *.jar ubuntu@$VM1IP:~/
    - scp -o StrictHostKeyChecking=no -i Employee-Management-App-VM.pem *.jar ubuntu@$VM2IP:~/